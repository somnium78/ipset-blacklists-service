#!/bin/bash

# ipset Blacklist Service with diff support and boot recovery
# Version: 2.0.11
# Author: somnium78
# License: GPL-3.0

TEMP_DIR="/tmp/ipset-blacklist"
WORK_DIR="/var/lib/ipset-blacklist"
IPSET_NAME="blacklist_inbound"
CONFIG_FILE="/etc/ipset-blacklist/blacklist-sources.conf"
LOG_FILE="/var/log/ipset-blacklist.log"

# Files for diff
NEW_LIST="$WORK_DIR/blacklist_new.txt"
CURRENT_LIST="$WORK_DIR/blacklist_current.txt"
ADD_LIST="$WORK_DIR/blacklist_add.txt"
DEL_LIST="$WORK_DIR/blacklist_del.txt"

mkdir -p "$TEMP_DIR" "$WORK_DIR"

log() {
    local msg="$(date): $1"
    echo "$msg" | tee -a "$LOG_FILE"
}

# Check if this is a post-reboot scenario
if [[ -f "$CURRENT_LIST" ]] && ! ipset list "$IPSET_NAME" >/dev/null 2>&1; then
    log "Detected missing ipset after reboot - restoring from saved state"

    # Recreate ipset
    ipset create "$IPSET_NAME" hash:net hashsize 262144 maxelem 2097152

    # Restore from saved state
    entries=$(wc -l < "$CURRENT_LIST")
    log "Restoring $entries entries from saved state..."

    while read -r entry; do
        [[ -n "$entry" ]] && ipset add "$IPSET_NAME" "$entry" 2>/dev/null
    done < "$CURRENT_LIST"

    # Re-add iptables rule
    if ! iptables -C INPUT -m set --match-set "$IPSET_NAME" src -j DROP 2>/dev/null; then
        iptables -I INPUT -m set --match-set "$IPSET_NAME" src -j DROP
        log "Re-added iptables rule after reboot"
    fi

    log "Post-reboot recovery completed - $(ipset list "$IPSET_NAME" | grep "Number of entries" | awk '{print $4}') entries restored"
fi

log "Starting blacklist update with diff support"

# Load config
if [[ ! -f "$CONFIG_FILE" ]]; then
    log "ERROR: Configuration file not found: $CONFIG_FILE"
    exit 1
fi

source "$CONFIG_FILE"

if [[ -z "${BLACKLIST_SOURCES:-}" ]]; then
    log "ERROR: No BLACKLIST_SOURCES defined in configuration"
    exit 1
fi

# Process all sources
log "Downloading and processing sources..."
for ((i=0; i<${#BLACKLIST_SOURCES[@]}; i+=4)); do
    name="${BLACKLIST_SOURCES[i]}"
    url="${BLACKLIST_SOURCES[i+1]}"
    desc="${BLACKLIST_SOURCES[i+3]}"

    log "Processing $name ($desc)"

    # Download
    if wget -q -T 30 -O "$TEMP_DIR/${name}_raw.txt" "$url"; then
        # Extract IPs/CIDRs
        grep -oE '((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/[0-9]{1,2})?' "$TEMP_DIR/${name}_raw.txt" | \
        grep -v '^0\.' | grep -v '^127\.' | sort -u > "$TEMP_DIR/${name}_clean.txt"

        entries=$(wc -l < "$TEMP_DIR/${name}_clean.txt")
        log "Cleaned $entries entries from $name"
    else
        log "Failed to download $name"
        touch "$TEMP_DIR/${name}_clean.txt"
    fi
done

# Combine all
log "Combining sources..."
cat "$TEMP_DIR"/*_clean.txt 2>/dev/null | sort -u > "$NEW_LIST"
total=$(wc -l < "$NEW_LIST")
log "Combined $total unique entries"

# Create ipset if needed
if ! ipset list "$IPSET_NAME" >/dev/null 2>&1; then
    log "Creating new ipset $IPSET_NAME"
    ipset create "$IPSET_NAME" hash:net hashsize 262144 maxelem 2097152

    # First time - load all entries
    log "First run - loading all $total entries..."
    while read -r entry; do
        [[ -n "$entry" ]] && ipset add "$IPSET_NAME" "$entry" 2>/dev/null
    done < "$NEW_LIST"

    # Save current state
    cp "$NEW_LIST" "$CURRENT_LIST"

else
    # Export current ipset content
    log "Exporting current ipset content..."
    ipset list "$IPSET_NAME" | grep -E '^[0-9]' | sort > "$CURRENT_LIST" 2>/dev/null || touch "$CURRENT_LIST"
    current_count=$(wc -l < "$CURRENT_LIST")
    log "Current ipset has $current_count entries"

    # Calculate differences
    log "Calculating differences..."
    comm -23 "$NEW_LIST" "$CURRENT_LIST" > "$ADD_LIST"      # In new but not in current
    comm -13 "$NEW_LIST" "$CURRENT_LIST" > "$DEL_LIST"      # In current but not in new

    add_count=$(wc -l < "$ADD_LIST")
    del_count=$(wc -l < "$DEL_LIST")

    log "Changes: +$add_count entries, -$del_count entries"

    if [[ $add_count -eq 0 && $del_count -eq 0 ]]; then
        log "No changes detected - ipset is up to date"
    else
        # Apply changes
        if [[ $del_count -gt 0 ]]; then
            log "Removing $del_count entries..."
            while read -r entry; do
                [[ -n "$entry" ]] && ipset del "$IPSET_NAME" "$entry" 2>/dev/null
            done < "$DEL_LIST"
        fi

        if [[ $add_count -gt 0 ]]; then
            log "Adding $add_count entries..."
            while read -r entry; do
                [[ -n "$entry" ]] && ipset add "$IPSET_NAME" "$entry" 2>/dev/null
            done < "$ADD_LIST"
        fi

        # Update current state
        cp "$NEW_LIST" "$CURRENT_LIST"
    fi
fi

# Add iptables rule if not exists
if ! iptables -C INPUT -m set --match-set "$IPSET_NAME" src -j DROP 2>/dev/null; then
    iptables -I INPUT -m set --match-set "$IPSET_NAME" src -j DROP
    log "Added iptables rule"
fi

# Final statistics
final_count=$(ipset list "$IPSET_NAME" | grep "Number of entries" | awk '{print $4}')
log "Blacklist update completed - $final_count entries in ipset"

# Cleanup old temp files
find "$TEMP_DIR" -name "*_raw.txt" -mtime +1 -delete 2>/dev/null || true

log "Update finished successfully"
