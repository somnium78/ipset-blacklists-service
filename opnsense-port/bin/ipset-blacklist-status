#!/bin/sh

# OPNsense Blacklist Service Status
# Shows comprehensive status of the blacklist service

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
TABLE_NAME="blacklist_inbound"
WORK_DIR="/var/db/blacklist"
LOG_FILE="/var/log/blacklist.log"
CRON_FILE="/usr/local/etc/cron.d/ipset-blacklist"

echo "üõ°Ô∏è  OPNsense Blacklist Service Status"
echo "======================================"

# Check pfctl table
if pfctl -t "$TABLE_NAME" -T show >/dev/null 2>&1; then
    TABLE_COUNT=$(pfctl -t "$TABLE_NAME" -T show 2>/dev/null | wc -l | tr -d ' ')
    echo -e "${GREEN}‚úÖ pfctl table '$TABLE_NAME': $TABLE_COUNT entries${NC}"
else
    echo -e "${RED}‚ùå pfctl table '$TABLE_NAME': NOT FOUND${NC}"
fi

echo ""

# Check statistics file
STATS_FILE="$WORK_DIR/stats.txt"
if [ -f "$STATS_FILE" ]; then
    echo "üìä Last Update Statistics:"
    while IFS='=' read -r key value; do
        case "$key" in
            last_update) echo "   Last Update: $value" ;;
            total_sources) echo "   Total Sources: $value" ;;
            successful_sources) echo "   Successful Sources: $value" ;;
            final_count) echo "   Final Count: $value" ;;
            version) echo "   Version: $value" ;;
        esac
    done < "$STATS_FILE"
else
    echo -e "${YELLOW}‚ö†Ô∏è  No statistics available${NC}"
fi

echo ""

# Check cron job
if [ -f "$CRON_FILE" ]; then
    echo -e "${GREEN}‚úÖ Cron Job: CONFIGURED${NC}"
    echo "   Location: $CRON_FILE"
    CRON_SCHEDULE=$(grep -v '^#' "$CRON_FILE" | grep -v '^$' | grep 'ipset-blacklist-opnsense' | awk '{print $1, $2, $3, $4, $5}')
    if [ -n "$CRON_SCHEDULE" ]; then
        echo "   Schedule: $CRON_SCHEDULE (every 4 hours)"
    fi

    # Check if cron service is running
    if pgrep -q cron; then
        echo -e "   Service: ${GREEN}RUNNING${NC} (PID: $(pgrep cron))"
    else
        echo -e "   Service: ${RED}NOT RUNNING${NC}"
    fi

    # Show next scheduled run (approximate)
    CURRENT_HOUR=$(date +%H)
    NEXT_HOUR=$(( (CURRENT_HOUR / 4 + 1) * 4 ))
    if [ $NEXT_HOUR -ge 24 ]; then
        NEXT_HOUR=0
        NEXT_DAY="tomorrow"
    else
        NEXT_DAY="today"
    fi
    printf "   Next run: %s at %02d:00\n" "$NEXT_DAY" "$NEXT_HOUR"

else
    echo -e "${RED}‚ö†Ô∏è  Cron Job: NOT CONFIGURED${NC}"
    echo "   Expected location: $CRON_FILE"

    # Check if it's in user crontab instead
    if crontab -l 2>/dev/null | grep -q "ipset-blacklist-opnsense"; then
        echo -e "${YELLOW}   Found in user crontab (not persistent)${NC}"
    fi
fi

echo ""

# Check firewall integration
echo "üî• Firewall Integration:"
if pfctl -sr 2>/dev/null | grep -q "$TABLE_NAME"; then
    echo -e "${GREEN}   ‚úÖ Firewall rules using table '$TABLE_NAME' found${NC}"
    pfctl -sr 2>/dev/null | grep "$TABLE_NAME" | head -3
else
    echo -e "${YELLOW}   ‚ö†Ô∏è  No firewall rules found using table '$TABLE_NAME'${NC}"
    echo "   Configure rules in OPNsense Web GUI using alias 'blacklist_inbound'"
fi

echo ""

# Show recent log entries
echo "üìù Recent Log Entries:"
if [ -f "$LOG_FILE" ]; then
    tail -5 "$LOG_FILE" | while IFS= read -r line; do
        echo "   $line"
    done
else
    echo -e "${YELLOW}   No log file found${NC}"
fi

echo ""

# Check for cron execution in system logs (FreeBSD style)
echo "üïê Recent Cron Activity:"
if [ -f "/var/log/messages" ]; then
    grep -i "ipset-blacklist" /var/log/messages 2>/dev/null | tail -3 | while IFS= read -r line; do
        echo "   $line"
    done || echo "   No recent cron executions found in /var/log/messages"
elif [ -f "/var/log/syslog" ]; then
    grep -i "ipset-blacklist" /var/log/syslog 2>/dev/null | tail -3 | while IFS= read -r line; do
        echo "   $line"
    done || echo "   No recent cron executions found in /var/log/syslog"
else
    echo "   System log not accessible"
fi

echo ""

# Management commands
echo "üîß Management Commands:"
echo "   Update now: /usr/local/bin/ipset-blacklist-opnsense"
echo "   View table: pfctl -t $TABLE_NAME -T show | head -10"
echo "   Clear table: pfctl -t $TABLE_NAME -T flush"
echo "   View logs: tail -f $LOG_FILE"
if [ -f "$CRON_FILE" ]; then
    echo "   Check cron: cat $CRON_FILE"
    echo "   System logs: tail -f /var/log/messages | grep -i cron"
fi

# Test cron job manually
echo ""
echo "üß™ Test Commands:"
echo "   Test cron job: /usr/local/bin/ipset-blacklist-opnsense"
echo "   Force update: rm /var/db/blacklist/blacklist_current.txt && /usr/local/bin/ipset-blacklist-opnsense"
