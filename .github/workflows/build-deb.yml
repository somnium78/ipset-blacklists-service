name: Build Multi-Platform Packages

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y dpkg-dev
    - name: Build DEB package
      run: chmod +x build-deb.sh && ./build-deb.sh
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: "*.deb"

  build-opnsense:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build OPNsense package
      run: cd opnsense-port && chmod +x build-opnsense-package.sh && ./build-opnsense-package.sh
    - name: Upload OPNsense artifact
      uses: actions/upload-artifact@v4
      with:
        name: opnsense-package
        path: "opnsense-port/*.tar.gz"

  create-release:
    needs: [build-deb, build-opnsense]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        path: ./packages/
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          packages/**/*.deb
          packages/**/*.tar.gz
        name: "Release ${GITHUB_REF_NAME}"
        body: |
          ## Multi-Platform Blacklist Service

          **Linux Package:** ipset-blacklists-service_*_all.deb
          **OPNsense Package:** ipset-blacklists-opnsense-*-opnsense.tar.gz

          **Installation:**
          - Linux: Download DEB → dpkg -i → systemctl enable ipset-blacklist-update.timer
          - OPNsense: Download tarball → extract → ./scripts/install-opnsense.sh

          **Documentation:** See README.md for detailed instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
